// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = "1.5.10"
        hilt_version = '2.37'
        nav_version = "2.3.4"
        room_version = "2.3.0"
        coroutines_version = "1.5.0"
        core_ktx_version = "1.5.0"
        appcompat_version = "1.3.0"
        material_version = "1.3.0"
        constraint_layout_version = "2.0.4"
        recycler_version = "1.2.1"
        nav_version = "2.3.5"
        lifecycle_version = "2.4.0-alpha02"
        glide_version = '4.12.0'

    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.0-alpha02'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // HILT
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        // Safe Args
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"

        // Serialization
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.5.10"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    afterEvaluate {
        if (it.hasProperty('android')) {
            android {
                compileSdkVersion 30
                buildToolsVersion "30.0.3"

                defaultConfig {
                    minSdkVersion 23
                    targetSdkVersion 30
                    versionCode 1
                    versionName "1.0"
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                kotlinOptions {
                    jvmTarget = '1.8'
                }

                android {
                    kotlinOptions {
                        jvmTarget = JavaVersion.VERSION_1_8.toString()
                    }
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}